package com.zxh.ssm.module.user.pojo;

import java.util.ArrayList;
import java.util.List;

public class IndicatorExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table indicator
     *
     * @mbggenerated
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table indicator
     *
     * @mbggenerated
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table indicator
     *
     * @mbggenerated
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table indicator
     *
     * @mbggenerated
     */
    public IndicatorExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table indicator
     *
     * @mbggenerated
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table indicator
     *
     * @mbggenerated
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table indicator
     *
     * @mbggenerated
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table indicator
     *
     * @mbggenerated
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table indicator
     *
     * @mbggenerated
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table indicator
     *
     * @mbggenerated
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table indicator
     *
     * @mbggenerated
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table indicator
     *
     * @mbggenerated
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table indicator
     *
     * @mbggenerated
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table indicator
     *
     * @mbggenerated
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table indicator
     *
     * @mbggenerated
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andFieldnameIsNull() {
            addCriterion("fieldName is null");
            return (Criteria) this;
        }

        public Criteria andFieldnameIsNotNull() {
            addCriterion("fieldName is not null");
            return (Criteria) this;
        }

        public Criteria andFieldnameEqualTo(String value) {
            addCriterion("fieldName =", value, "fieldname");
            return (Criteria) this;
        }

        public Criteria andFieldnameNotEqualTo(String value) {
            addCriterion("fieldName <>", value, "fieldname");
            return (Criteria) this;
        }

        public Criteria andFieldnameGreaterThan(String value) {
            addCriterion("fieldName >", value, "fieldname");
            return (Criteria) this;
        }

        public Criteria andFieldnameGreaterThanOrEqualTo(String value) {
            addCriterion("fieldName >=", value, "fieldname");
            return (Criteria) this;
        }

        public Criteria andFieldnameLessThan(String value) {
            addCriterion("fieldName <", value, "fieldname");
            return (Criteria) this;
        }

        public Criteria andFieldnameLessThanOrEqualTo(String value) {
            addCriterion("fieldName <=", value, "fieldname");
            return (Criteria) this;
        }

        public Criteria andFieldnameLike(String value) {
            addCriterion("fieldName like", value, "fieldname");
            return (Criteria) this;
        }

        public Criteria andFieldnameNotLike(String value) {
            addCriterion("fieldName not like", value, "fieldname");
            return (Criteria) this;
        }

        public Criteria andFieldnameIn(List<String> values) {
            addCriterion("fieldName in", values, "fieldname");
            return (Criteria) this;
        }

        public Criteria andFieldnameNotIn(List<String> values) {
            addCriterion("fieldName not in", values, "fieldname");
            return (Criteria) this;
        }

        public Criteria andFieldnameBetween(String value1, String value2) {
            addCriterion("fieldName between", value1, value2, "fieldname");
            return (Criteria) this;
        }

        public Criteria andFieldnameNotBetween(String value1, String value2) {
            addCriterion("fieldName not between", value1, value2, "fieldname");
            return (Criteria) this;
        }

        public Criteria andBelongtableIsNull() {
            addCriterion("belongTable is null");
            return (Criteria) this;
        }

        public Criteria andBelongtableIsNotNull() {
            addCriterion("belongTable is not null");
            return (Criteria) this;
        }

        public Criteria andBelongtableEqualTo(String value) {
            addCriterion("belongTable =", value, "belongtable");
            return (Criteria) this;
        }

        public Criteria andBelongtableNotEqualTo(String value) {
            addCriterion("belongTable <>", value, "belongtable");
            return (Criteria) this;
        }

        public Criteria andBelongtableGreaterThan(String value) {
            addCriterion("belongTable >", value, "belongtable");
            return (Criteria) this;
        }

        public Criteria andBelongtableGreaterThanOrEqualTo(String value) {
            addCriterion("belongTable >=", value, "belongtable");
            return (Criteria) this;
        }

        public Criteria andBelongtableLessThan(String value) {
            addCriterion("belongTable <", value, "belongtable");
            return (Criteria) this;
        }

        public Criteria andBelongtableLessThanOrEqualTo(String value) {
            addCriterion("belongTable <=", value, "belongtable");
            return (Criteria) this;
        }

        public Criteria andBelongtableLike(String value) {
            addCriterion("belongTable like", value, "belongtable");
            return (Criteria) this;
        }

        public Criteria andBelongtableNotLike(String value) {
            addCriterion("belongTable not like", value, "belongtable");
            return (Criteria) this;
        }

        public Criteria andBelongtableIn(List<String> values) {
            addCriterion("belongTable in", values, "belongtable");
            return (Criteria) this;
        }

        public Criteria andBelongtableNotIn(List<String> values) {
            addCriterion("belongTable not in", values, "belongtable");
            return (Criteria) this;
        }

        public Criteria andBelongtableBetween(String value1, String value2) {
            addCriterion("belongTable between", value1, value2, "belongtable");
            return (Criteria) this;
        }

        public Criteria andBelongtableNotBetween(String value1, String value2) {
            addCriterion("belongTable not between", value1, value2, "belongtable");
            return (Criteria) this;
        }

        public Criteria andTablealiasIsNull() {
            addCriterion("tableAlias is null");
            return (Criteria) this;
        }

        public Criteria andTablealiasIsNotNull() {
            addCriterion("tableAlias is not null");
            return (Criteria) this;
        }

        public Criteria andTablealiasEqualTo(String value) {
            addCriterion("tableAlias =", value, "tablealias");
            return (Criteria) this;
        }

        public Criteria andTablealiasNotEqualTo(String value) {
            addCriterion("tableAlias <>", value, "tablealias");
            return (Criteria) this;
        }

        public Criteria andTablealiasGreaterThan(String value) {
            addCriterion("tableAlias >", value, "tablealias");
            return (Criteria) this;
        }

        public Criteria andTablealiasGreaterThanOrEqualTo(String value) {
            addCriterion("tableAlias >=", value, "tablealias");
            return (Criteria) this;
        }

        public Criteria andTablealiasLessThan(String value) {
            addCriterion("tableAlias <", value, "tablealias");
            return (Criteria) this;
        }

        public Criteria andTablealiasLessThanOrEqualTo(String value) {
            addCriterion("tableAlias <=", value, "tablealias");
            return (Criteria) this;
        }

        public Criteria andTablealiasLike(String value) {
            addCriterion("tableAlias like", value, "tablealias");
            return (Criteria) this;
        }

        public Criteria andTablealiasNotLike(String value) {
            addCriterion("tableAlias not like", value, "tablealias");
            return (Criteria) this;
        }

        public Criteria andTablealiasIn(List<String> values) {
            addCriterion("tableAlias in", values, "tablealias");
            return (Criteria) this;
        }

        public Criteria andTablealiasNotIn(List<String> values) {
            addCriterion("tableAlias not in", values, "tablealias");
            return (Criteria) this;
        }

        public Criteria andTablealiasBetween(String value1, String value2) {
            addCriterion("tableAlias between", value1, value2, "tablealias");
            return (Criteria) this;
        }

        public Criteria andTablealiasNotBetween(String value1, String value2) {
            addCriterion("tableAlias not between", value1, value2, "tablealias");
            return (Criteria) this;
        }

        public Criteria andDisplaynameIsNull() {
            addCriterion("displayName is null");
            return (Criteria) this;
        }

        public Criteria andDisplaynameIsNotNull() {
            addCriterion("displayName is not null");
            return (Criteria) this;
        }

        public Criteria andDisplaynameEqualTo(String value) {
            addCriterion("displayName =", value, "displayname");
            return (Criteria) this;
        }

        public Criteria andDisplaynameNotEqualTo(String value) {
            addCriterion("displayName <>", value, "displayname");
            return (Criteria) this;
        }

        public Criteria andDisplaynameGreaterThan(String value) {
            addCriterion("displayName >", value, "displayname");
            return (Criteria) this;
        }

        public Criteria andDisplaynameGreaterThanOrEqualTo(String value) {
            addCriterion("displayName >=", value, "displayname");
            return (Criteria) this;
        }

        public Criteria andDisplaynameLessThan(String value) {
            addCriterion("displayName <", value, "displayname");
            return (Criteria) this;
        }

        public Criteria andDisplaynameLessThanOrEqualTo(String value) {
            addCriterion("displayName <=", value, "displayname");
            return (Criteria) this;
        }

        public Criteria andDisplaynameLike(String value) {
            addCriterion("displayName like", value, "displayname");
            return (Criteria) this;
        }

        public Criteria andDisplaynameNotLike(String value) {
            addCriterion("displayName not like", value, "displayname");
            return (Criteria) this;
        }

        public Criteria andDisplaynameIn(List<String> values) {
            addCriterion("displayName in", values, "displayname");
            return (Criteria) this;
        }

        public Criteria andDisplaynameNotIn(List<String> values) {
            addCriterion("displayName not in", values, "displayname");
            return (Criteria) this;
        }

        public Criteria andDisplaynameBetween(String value1, String value2) {
            addCriterion("displayName between", value1, value2, "displayname");
            return (Criteria) this;
        }

        public Criteria andDisplaynameNotBetween(String value1, String value2) {
            addCriterion("displayName not between", value1, value2, "displayname");
            return (Criteria) this;
        }

        public Criteria andDownableIsNull() {
            addCriterion("downable is null");
            return (Criteria) this;
        }

        public Criteria andDownableIsNotNull() {
            addCriterion("downable is not null");
            return (Criteria) this;
        }

        public Criteria andDownableEqualTo(Byte value) {
            addCriterion("downable =", value, "downable");
            return (Criteria) this;
        }

        public Criteria andDownableNotEqualTo(Byte value) {
            addCriterion("downable <>", value, "downable");
            return (Criteria) this;
        }

        public Criteria andDownableGreaterThan(Byte value) {
            addCriterion("downable >", value, "downable");
            return (Criteria) this;
        }

        public Criteria andDownableGreaterThanOrEqualTo(Byte value) {
            addCriterion("downable >=", value, "downable");
            return (Criteria) this;
        }

        public Criteria andDownableLessThan(Byte value) {
            addCriterion("downable <", value, "downable");
            return (Criteria) this;
        }

        public Criteria andDownableLessThanOrEqualTo(Byte value) {
            addCriterion("downable <=", value, "downable");
            return (Criteria) this;
        }

        public Criteria andDownableIn(List<Byte> values) {
            addCriterion("downable in", values, "downable");
            return (Criteria) this;
        }

        public Criteria andDownableNotIn(List<Byte> values) {
            addCriterion("downable not in", values, "downable");
            return (Criteria) this;
        }

        public Criteria andDownableBetween(Byte value1, Byte value2) {
            addCriterion("downable between", value1, value2, "downable");
            return (Criteria) this;
        }

        public Criteria andDownableNotBetween(Byte value1, Byte value2) {
            addCriterion("downable not between", value1, value2, "downable");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table indicator
     *
     * @mbggenerated do_not_delete_during_merge
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table indicator
     *
     * @mbggenerated
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}