package com.zxh.ssm.module.user.pojo;

import java.util.ArrayList;
import java.util.Date;
import java.util.Iterator;
import java.util.List;

public class PatientCasesInformationExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table patient_cases_information
     *
     * @mbggenerated
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table patient_cases_information
     *
     * @mbggenerated
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table patient_cases_information
     *
     * @mbggenerated
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table patient_cases_information
     *
     * @mbggenerated
     */
    public PatientCasesInformationExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table patient_cases_information
     *
     * @mbggenerated
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table patient_cases_information
     *
     * @mbggenerated
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table patient_cases_information
     *
     * @mbggenerated
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table patient_cases_information
     *
     * @mbggenerated
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table patient_cases_information
     *
     * @mbggenerated
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table patient_cases_information
     *
     * @mbggenerated
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table patient_cases_information
     *
     * @mbggenerated
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table patient_cases_information
     *
     * @mbggenerated
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table patient_cases_information
     *
     * @mbggenerated
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table patient_cases_information
     *
     * @mbggenerated
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table patient_cases_information
     *
     * @mbggenerated
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        protected void addCriterionForJDBCDate(String condition, Date value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            addCriterion(condition, new java.sql.Date(value.getTime()), property);
        }

        protected void addCriterionForJDBCDate(String condition, List<Date> values, String property) {
            if (values == null || values.size() == 0) {
                throw new RuntimeException("Value list for " + property + " cannot be null or empty");
            }
            List<java.sql.Date> dateList = new ArrayList<java.sql.Date>();
            Iterator<Date> iter = values.iterator();
            while (iter.hasNext()) {
                dateList.add(new java.sql.Date(iter.next().getTime()));
            }
            addCriterion(condition, dateList, property);
        }

        protected void addCriterionForJDBCDate(String condition, Date value1, Date value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            addCriterion(condition, new java.sql.Date(value1.getTime()), new java.sql.Date(value2.getTime()), property);
        }

        public Criteria andYearIsNull() {
            addCriterion("year is null");
            return (Criteria) this;
        }

        public Criteria andYearIsNotNull() {
            addCriterion("year is not null");
            return (Criteria) this;
        }

        public Criteria andYearEqualTo(Date value) {
            addCriterionForJDBCDate("year =", value, "year");
            return (Criteria) this;
        }

        public Criteria andYearNotEqualTo(Date value) {
            addCriterionForJDBCDate("year <>", value, "year");
            return (Criteria) this;
        }

        public Criteria andYearGreaterThan(Date value) {
            addCriterionForJDBCDate("year >", value, "year");
            return (Criteria) this;
        }

        public Criteria andYearGreaterThanOrEqualTo(Date value) {
            addCriterionForJDBCDate("year >=", value, "year");
            return (Criteria) this;
        }

        public Criteria andYearLessThan(Date value) {
            addCriterionForJDBCDate("year <", value, "year");
            return (Criteria) this;
        }

        public Criteria andYearLessThanOrEqualTo(Date value) {
            addCriterionForJDBCDate("year <=", value, "year");
            return (Criteria) this;
        }

        public Criteria andYearIn(List<Date> values) {
            addCriterionForJDBCDate("year in", values, "year");
            return (Criteria) this;
        }

        public Criteria andYearNotIn(List<Date> values) {
            addCriterionForJDBCDate("year not in", values, "year");
            return (Criteria) this;
        }

        public Criteria andYearBetween(Date value1, Date value2) {
            addCriterionForJDBCDate("year between", value1, value2, "year");
            return (Criteria) this;
        }

        public Criteria andYearNotBetween(Date value1, Date value2) {
            addCriterionForJDBCDate("year not between", value1, value2, "year");
            return (Criteria) this;
        }

        public Criteria andCardidIsNull() {
            addCriterion("cardID is null");
            return (Criteria) this;
        }

        public Criteria andCardidIsNotNull() {
            addCriterion("cardID is not null");
            return (Criteria) this;
        }

        public Criteria andCardidEqualTo(Integer value) {
            addCriterion("cardID =", value, "cardid");
            return (Criteria) this;
        }

        public Criteria andCardidNotEqualTo(Integer value) {
            addCriterion("cardID <>", value, "cardid");
            return (Criteria) this;
        }

        public Criteria andCardidGreaterThan(Integer value) {
            addCriterion("cardID >", value, "cardid");
            return (Criteria) this;
        }

        public Criteria andCardidGreaterThanOrEqualTo(Integer value) {
            addCriterion("cardID >=", value, "cardid");
            return (Criteria) this;
        }

        public Criteria andCardidLessThan(Integer value) {
            addCriterion("cardID <", value, "cardid");
            return (Criteria) this;
        }

        public Criteria andCardidLessThanOrEqualTo(Integer value) {
            addCriterion("cardID <=", value, "cardid");
            return (Criteria) this;
        }

        public Criteria andCardidIn(List<Integer> values) {
            addCriterion("cardID in", values, "cardid");
            return (Criteria) this;
        }

        public Criteria andCardidNotIn(List<Integer> values) {
            addCriterion("cardID not in", values, "cardid");
            return (Criteria) this;
        }

        public Criteria andCardidBetween(Integer value1, Integer value2) {
            addCriterion("cardID between", value1, value2, "cardid");
            return (Criteria) this;
        }

        public Criteria andCardidNotBetween(Integer value1, Integer value2) {
            addCriterion("cardID not between", value1, value2, "cardid");
            return (Criteria) this;
        }

        public Criteria andCasecategory1IsNull() {
            addCriterion("caseCategory1 is null");
            return (Criteria) this;
        }

        public Criteria andCasecategory1IsNotNull() {
            addCriterion("caseCategory1 is not null");
            return (Criteria) this;
        }

        public Criteria andCasecategory1EqualTo(String value) {
            addCriterion("caseCategory1 =", value, "casecategory1");
            return (Criteria) this;
        }

        public Criteria andCasecategory1NotEqualTo(String value) {
            addCriterion("caseCategory1 <>", value, "casecategory1");
            return (Criteria) this;
        }

        public Criteria andCasecategory1GreaterThan(String value) {
            addCriterion("caseCategory1 >", value, "casecategory1");
            return (Criteria) this;
        }

        public Criteria andCasecategory1GreaterThanOrEqualTo(String value) {
            addCriterion("caseCategory1 >=", value, "casecategory1");
            return (Criteria) this;
        }

        public Criteria andCasecategory1LessThan(String value) {
            addCriterion("caseCategory1 <", value, "casecategory1");
            return (Criteria) this;
        }

        public Criteria andCasecategory1LessThanOrEqualTo(String value) {
            addCriterion("caseCategory1 <=", value, "casecategory1");
            return (Criteria) this;
        }

        public Criteria andCasecategory1Like(String value) {
            addCriterion("caseCategory1 like", value, "casecategory1");
            return (Criteria) this;
        }

        public Criteria andCasecategory1NotLike(String value) {
            addCriterion("caseCategory1 not like", value, "casecategory1");
            return (Criteria) this;
        }

        public Criteria andCasecategory1In(List<String> values) {
            addCriterion("caseCategory1 in", values, "casecategory1");
            return (Criteria) this;
        }

        public Criteria andCasecategory1NotIn(List<String> values) {
            addCriterion("caseCategory1 not in", values, "casecategory1");
            return (Criteria) this;
        }

        public Criteria andCasecategory1Between(String value1, String value2) {
            addCriterion("caseCategory1 between", value1, value2, "casecategory1");
            return (Criteria) this;
        }

        public Criteria andCasecategory1NotBetween(String value1, String value2) {
            addCriterion("caseCategory1 not between", value1, value2, "casecategory1");
            return (Criteria) this;
        }

        public Criteria andCasecategory2IsNull() {
            addCriterion("caseCategory2 is null");
            return (Criteria) this;
        }

        public Criteria andCasecategory2IsNotNull() {
            addCriterion("caseCategory2 is not null");
            return (Criteria) this;
        }

        public Criteria andCasecategory2EqualTo(String value) {
            addCriterion("caseCategory2 =", value, "casecategory2");
            return (Criteria) this;
        }

        public Criteria andCasecategory2NotEqualTo(String value) {
            addCriterion("caseCategory2 <>", value, "casecategory2");
            return (Criteria) this;
        }

        public Criteria andCasecategory2GreaterThan(String value) {
            addCriterion("caseCategory2 >", value, "casecategory2");
            return (Criteria) this;
        }

        public Criteria andCasecategory2GreaterThanOrEqualTo(String value) {
            addCriterion("caseCategory2 >=", value, "casecategory2");
            return (Criteria) this;
        }

        public Criteria andCasecategory2LessThan(String value) {
            addCriterion("caseCategory2 <", value, "casecategory2");
            return (Criteria) this;
        }

        public Criteria andCasecategory2LessThanOrEqualTo(String value) {
            addCriterion("caseCategory2 <=", value, "casecategory2");
            return (Criteria) this;
        }

        public Criteria andCasecategory2Like(String value) {
            addCriterion("caseCategory2 like", value, "casecategory2");
            return (Criteria) this;
        }

        public Criteria andCasecategory2NotLike(String value) {
            addCriterion("caseCategory2 not like", value, "casecategory2");
            return (Criteria) this;
        }

        public Criteria andCasecategory2In(List<String> values) {
            addCriterion("caseCategory2 in", values, "casecategory2");
            return (Criteria) this;
        }

        public Criteria andCasecategory2NotIn(List<String> values) {
            addCriterion("caseCategory2 not in", values, "casecategory2");
            return (Criteria) this;
        }

        public Criteria andCasecategory2Between(String value1, String value2) {
            addCriterion("caseCategory2 between", value1, value2, "casecategory2");
            return (Criteria) this;
        }

        public Criteria andCasecategory2NotBetween(String value1, String value2) {
            addCriterion("caseCategory2 not between", value1, value2, "casecategory2");
            return (Criteria) this;
        }

        public Criteria andIlldateIsNull() {
            addCriterion("illDate is null");
            return (Criteria) this;
        }

        public Criteria andIlldateIsNotNull() {
            addCriterion("illDate is not null");
            return (Criteria) this;
        }

        public Criteria andIlldateEqualTo(Date value) {
            addCriterionForJDBCDate("illDate =", value, "illdate");
            return (Criteria) this;
        }

        public Criteria andIlldateNotEqualTo(Date value) {
            addCriterionForJDBCDate("illDate <>", value, "illdate");
            return (Criteria) this;
        }

        public Criteria andIlldateGreaterThan(Date value) {
            addCriterionForJDBCDate("illDate >", value, "illdate");
            return (Criteria) this;
        }

        public Criteria andIlldateGreaterThanOrEqualTo(Date value) {
            addCriterionForJDBCDate("illDate >=", value, "illdate");
            return (Criteria) this;
        }

        public Criteria andIlldateLessThan(Date value) {
            addCriterionForJDBCDate("illDate <", value, "illdate");
            return (Criteria) this;
        }

        public Criteria andIlldateLessThanOrEqualTo(Date value) {
            addCriterionForJDBCDate("illDate <=", value, "illdate");
            return (Criteria) this;
        }

        public Criteria andIlldateIn(List<Date> values) {
            addCriterionForJDBCDate("illDate in", values, "illdate");
            return (Criteria) this;
        }

        public Criteria andIlldateNotIn(List<Date> values) {
            addCriterionForJDBCDate("illDate not in", values, "illdate");
            return (Criteria) this;
        }

        public Criteria andIlldateBetween(Date value1, Date value2) {
            addCriterionForJDBCDate("illDate between", value1, value2, "illdate");
            return (Criteria) this;
        }

        public Criteria andIlldateNotBetween(Date value1, Date value2) {
            addCriterionForJDBCDate("illDate not between", value1, value2, "illdate");
            return (Criteria) this;
        }

        public Criteria andConfirmdateIsNull() {
            addCriterion("confirmDate is null");
            return (Criteria) this;
        }

        public Criteria andConfirmdateIsNotNull() {
            addCriterion("confirmDate is not null");
            return (Criteria) this;
        }

        public Criteria andConfirmdateEqualTo(String value) {
            addCriterion("confirmDate =", value, "confirmdate");
            return (Criteria) this;
        }

        public Criteria andConfirmdateNotEqualTo(String value) {
            addCriterion("confirmDate <>", value, "confirmdate");
            return (Criteria) this;
        }

        public Criteria andConfirmdateGreaterThan(String value) {
            addCriterion("confirmDate >", value, "confirmdate");
            return (Criteria) this;
        }

        public Criteria andConfirmdateGreaterThanOrEqualTo(String value) {
            addCriterion("confirmDate >=", value, "confirmdate");
            return (Criteria) this;
        }

        public Criteria andConfirmdateLessThan(String value) {
            addCriterion("confirmDate <", value, "confirmdate");
            return (Criteria) this;
        }

        public Criteria andConfirmdateLessThanOrEqualTo(String value) {
            addCriterion("confirmDate <=", value, "confirmdate");
            return (Criteria) this;
        }

        public Criteria andConfirmdateLike(String value) {
            addCriterion("confirmDate like", value, "confirmdate");
            return (Criteria) this;
        }

        public Criteria andConfirmdateNotLike(String value) {
            addCriterion("confirmDate not like", value, "confirmdate");
            return (Criteria) this;
        }

        public Criteria andConfirmdateIn(List<String> values) {
            addCriterion("confirmDate in", values, "confirmdate");
            return (Criteria) this;
        }

        public Criteria andConfirmdateNotIn(List<String> values) {
            addCriterion("confirmDate not in", values, "confirmdate");
            return (Criteria) this;
        }

        public Criteria andConfirmdateBetween(String value1, String value2) {
            addCriterion("confirmDate between", value1, value2, "confirmdate");
            return (Criteria) this;
        }

        public Criteria andConfirmdateNotBetween(String value1, String value2) {
            addCriterion("confirmDate not between", value1, value2, "confirmdate");
            return (Criteria) this;
        }

        public Criteria andDeathdateIsNull() {
            addCriterion("deathDate is null");
            return (Criteria) this;
        }

        public Criteria andDeathdateIsNotNull() {
            addCriterion("deathDate is not null");
            return (Criteria) this;
        }

        public Criteria andDeathdateEqualTo(String value) {
            addCriterion("deathDate =", value, "deathdate");
            return (Criteria) this;
        }

        public Criteria andDeathdateNotEqualTo(String value) {
            addCriterion("deathDate <>", value, "deathdate");
            return (Criteria) this;
        }

        public Criteria andDeathdateGreaterThan(String value) {
            addCriterion("deathDate >", value, "deathdate");
            return (Criteria) this;
        }

        public Criteria andDeathdateGreaterThanOrEqualTo(String value) {
            addCriterion("deathDate >=", value, "deathdate");
            return (Criteria) this;
        }

        public Criteria andDeathdateLessThan(String value) {
            addCriterion("deathDate <", value, "deathdate");
            return (Criteria) this;
        }

        public Criteria andDeathdateLessThanOrEqualTo(String value) {
            addCriterion("deathDate <=", value, "deathdate");
            return (Criteria) this;
        }

        public Criteria andDeathdateLike(String value) {
            addCriterion("deathDate like", value, "deathdate");
            return (Criteria) this;
        }

        public Criteria andDeathdateNotLike(String value) {
            addCriterion("deathDate not like", value, "deathdate");
            return (Criteria) this;
        }

        public Criteria andDeathdateIn(List<String> values) {
            addCriterion("deathDate in", values, "deathdate");
            return (Criteria) this;
        }

        public Criteria andDeathdateNotIn(List<String> values) {
            addCriterion("deathDate not in", values, "deathdate");
            return (Criteria) this;
        }

        public Criteria andDeathdateBetween(String value1, String value2) {
            addCriterion("deathDate between", value1, value2, "deathdate");
            return (Criteria) this;
        }

        public Criteria andDeathdateNotBetween(String value1, String value2) {
            addCriterion("deathDate not between", value1, value2, "deathdate");
            return (Criteria) this;
        }

        public Criteria andDiseasenameIsNull() {
            addCriterion("diseaseName is null");
            return (Criteria) this;
        }

        public Criteria andDiseasenameIsNotNull() {
            addCriterion("diseaseName is not null");
            return (Criteria) this;
        }

        public Criteria andDiseasenameEqualTo(String value) {
            addCriterion("diseaseName =", value, "diseasename");
            return (Criteria) this;
        }

        public Criteria andDiseasenameNotEqualTo(String value) {
            addCriterion("diseaseName <>", value, "diseasename");
            return (Criteria) this;
        }

        public Criteria andDiseasenameGreaterThan(String value) {
            addCriterion("diseaseName >", value, "diseasename");
            return (Criteria) this;
        }

        public Criteria andDiseasenameGreaterThanOrEqualTo(String value) {
            addCriterion("diseaseName >=", value, "diseasename");
            return (Criteria) this;
        }

        public Criteria andDiseasenameLessThan(String value) {
            addCriterion("diseaseName <", value, "diseasename");
            return (Criteria) this;
        }

        public Criteria andDiseasenameLessThanOrEqualTo(String value) {
            addCriterion("diseaseName <=", value, "diseasename");
            return (Criteria) this;
        }

        public Criteria andDiseasenameLike(String value) {
            addCriterion("diseaseName like", value, "diseasename");
            return (Criteria) this;
        }

        public Criteria andDiseasenameNotLike(String value) {
            addCriterion("diseaseName not like", value, "diseasename");
            return (Criteria) this;
        }

        public Criteria andDiseasenameIn(List<String> values) {
            addCriterion("diseaseName in", values, "diseasename");
            return (Criteria) this;
        }

        public Criteria andDiseasenameNotIn(List<String> values) {
            addCriterion("diseaseName not in", values, "diseasename");
            return (Criteria) this;
        }

        public Criteria andDiseasenameBetween(String value1, String value2) {
            addCriterion("diseaseName between", value1, value2, "diseasename");
            return (Criteria) this;
        }

        public Criteria andDiseasenameNotBetween(String value1, String value2) {
            addCriterion("diseaseName not between", value1, value2, "diseasename");
            return (Criteria) this;
        }

        public Criteria andFillcarddocIsNull() {
            addCriterion("fillCardDoc is null");
            return (Criteria) this;
        }

        public Criteria andFillcarddocIsNotNull() {
            addCriterion("fillCardDoc is not null");
            return (Criteria) this;
        }

        public Criteria andFillcarddocEqualTo(String value) {
            addCriterion("fillCardDoc =", value, "fillcarddoc");
            return (Criteria) this;
        }

        public Criteria andFillcarddocNotEqualTo(String value) {
            addCriterion("fillCardDoc <>", value, "fillcarddoc");
            return (Criteria) this;
        }

        public Criteria andFillcarddocGreaterThan(String value) {
            addCriterion("fillCardDoc >", value, "fillcarddoc");
            return (Criteria) this;
        }

        public Criteria andFillcarddocGreaterThanOrEqualTo(String value) {
            addCriterion("fillCardDoc >=", value, "fillcarddoc");
            return (Criteria) this;
        }

        public Criteria andFillcarddocLessThan(String value) {
            addCriterion("fillCardDoc <", value, "fillcarddoc");
            return (Criteria) this;
        }

        public Criteria andFillcarddocLessThanOrEqualTo(String value) {
            addCriterion("fillCardDoc <=", value, "fillcarddoc");
            return (Criteria) this;
        }

        public Criteria andFillcarddocLike(String value) {
            addCriterion("fillCardDoc like", value, "fillcarddoc");
            return (Criteria) this;
        }

        public Criteria andFillcarddocNotLike(String value) {
            addCriterion("fillCardDoc not like", value, "fillcarddoc");
            return (Criteria) this;
        }

        public Criteria andFillcarddocIn(List<String> values) {
            addCriterion("fillCardDoc in", values, "fillcarddoc");
            return (Criteria) this;
        }

        public Criteria andFillcarddocNotIn(List<String> values) {
            addCriterion("fillCardDoc not in", values, "fillcarddoc");
            return (Criteria) this;
        }

        public Criteria andFillcarddocBetween(String value1, String value2) {
            addCriterion("fillCardDoc between", value1, value2, "fillcarddoc");
            return (Criteria) this;
        }

        public Criteria andFillcarddocNotBetween(String value1, String value2) {
            addCriterion("fillCardDoc not between", value1, value2, "fillcarddoc");
            return (Criteria) this;
        }

        public Criteria andFillcarddateIsNull() {
            addCriterion("fillCardDate is null");
            return (Criteria) this;
        }

        public Criteria andFillcarddateIsNotNull() {
            addCriterion("fillCardDate is not null");
            return (Criteria) this;
        }

        public Criteria andFillcarddateEqualTo(Date value) {
            addCriterionForJDBCDate("fillCardDate =", value, "fillcarddate");
            return (Criteria) this;
        }

        public Criteria andFillcarddateNotEqualTo(Date value) {
            addCriterionForJDBCDate("fillCardDate <>", value, "fillcarddate");
            return (Criteria) this;
        }

        public Criteria andFillcarddateGreaterThan(Date value) {
            addCriterionForJDBCDate("fillCardDate >", value, "fillcarddate");
            return (Criteria) this;
        }

        public Criteria andFillcarddateGreaterThanOrEqualTo(Date value) {
            addCriterionForJDBCDate("fillCardDate >=", value, "fillcarddate");
            return (Criteria) this;
        }

        public Criteria andFillcarddateLessThan(Date value) {
            addCriterionForJDBCDate("fillCardDate <", value, "fillcarddate");
            return (Criteria) this;
        }

        public Criteria andFillcarddateLessThanOrEqualTo(Date value) {
            addCriterionForJDBCDate("fillCardDate <=", value, "fillcarddate");
            return (Criteria) this;
        }

        public Criteria andFillcarddateIn(List<Date> values) {
            addCriterionForJDBCDate("fillCardDate in", values, "fillcarddate");
            return (Criteria) this;
        }

        public Criteria andFillcarddateNotIn(List<Date> values) {
            addCriterionForJDBCDate("fillCardDate not in", values, "fillcarddate");
            return (Criteria) this;
        }

        public Criteria andFillcarddateBetween(Date value1, Date value2) {
            addCriterionForJDBCDate("fillCardDate between", value1, value2, "fillcarddate");
            return (Criteria) this;
        }

        public Criteria andFillcarddateNotBetween(Date value1, Date value2) {
            addCriterionForJDBCDate("fillCardDate not between", value1, value2, "fillcarddate");
            return (Criteria) this;
        }

        public Criteria andNotesIsNull() {
            addCriterion("notes is null");
            return (Criteria) this;
        }

        public Criteria andNotesIsNotNull() {
            addCriterion("notes is not null");
            return (Criteria) this;
        }

        public Criteria andNotesEqualTo(String value) {
            addCriterion("notes =", value, "notes");
            return (Criteria) this;
        }

        public Criteria andNotesNotEqualTo(String value) {
            addCriterion("notes <>", value, "notes");
            return (Criteria) this;
        }

        public Criteria andNotesGreaterThan(String value) {
            addCriterion("notes >", value, "notes");
            return (Criteria) this;
        }

        public Criteria andNotesGreaterThanOrEqualTo(String value) {
            addCriterion("notes >=", value, "notes");
            return (Criteria) this;
        }

        public Criteria andNotesLessThan(String value) {
            addCriterion("notes <", value, "notes");
            return (Criteria) this;
        }

        public Criteria andNotesLessThanOrEqualTo(String value) {
            addCriterion("notes <=", value, "notes");
            return (Criteria) this;
        }

        public Criteria andNotesLike(String value) {
            addCriterion("notes like", value, "notes");
            return (Criteria) this;
        }

        public Criteria andNotesNotLike(String value) {
            addCriterion("notes not like", value, "notes");
            return (Criteria) this;
        }

        public Criteria andNotesIn(List<String> values) {
            addCriterion("notes in", values, "notes");
            return (Criteria) this;
        }

        public Criteria andNotesNotIn(List<String> values) {
            addCriterion("notes not in", values, "notes");
            return (Criteria) this;
        }

        public Criteria andNotesBetween(String value1, String value2) {
            addCriterion("notes between", value1, value2, "notes");
            return (Criteria) this;
        }

        public Criteria andNotesNotBetween(String value1, String value2) {
            addCriterion("notes not between", value1, value2, "notes");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table patient_cases_information
     *
     * @mbggenerated do_not_delete_during_merge
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table patient_cases_information
     *
     * @mbggenerated
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}