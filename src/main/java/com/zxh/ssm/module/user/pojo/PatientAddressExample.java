package com.zxh.ssm.module.user.pojo;

import java.util.ArrayList;
import java.util.List;

public class PatientAddressExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table patient_address
     *
     * @mbggenerated
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table patient_address
     *
     * @mbggenerated
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table patient_address
     *
     * @mbggenerated
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table patient_address
     *
     * @mbggenerated
     */
    public PatientAddressExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table patient_address
     *
     * @mbggenerated
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table patient_address
     *
     * @mbggenerated
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table patient_address
     *
     * @mbggenerated
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table patient_address
     *
     * @mbggenerated
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table patient_address
     *
     * @mbggenerated
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table patient_address
     *
     * @mbggenerated
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table patient_address
     *
     * @mbggenerated
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table patient_address
     *
     * @mbggenerated
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table patient_address
     *
     * @mbggenerated
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table patient_address
     *
     * @mbggenerated
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table patient_address
     *
     * @mbggenerated
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andCardidIsNull() {
            addCriterion("cardID is null");
            return (Criteria) this;
        }

        public Criteria andCardidIsNotNull() {
            addCriterion("cardID is not null");
            return (Criteria) this;
        }

        public Criteria andCardidEqualTo(Integer value) {
            addCriterion("cardID =", value, "cardid");
            return (Criteria) this;
        }

        public Criteria andCardidNotEqualTo(Integer value) {
            addCriterion("cardID <>", value, "cardid");
            return (Criteria) this;
        }

        public Criteria andCardidGreaterThan(Integer value) {
            addCriterion("cardID >", value, "cardid");
            return (Criteria) this;
        }

        public Criteria andCardidGreaterThanOrEqualTo(Integer value) {
            addCriterion("cardID >=", value, "cardid");
            return (Criteria) this;
        }

        public Criteria andCardidLessThan(Integer value) {
            addCriterion("cardID <", value, "cardid");
            return (Criteria) this;
        }

        public Criteria andCardidLessThanOrEqualTo(Integer value) {
            addCriterion("cardID <=", value, "cardid");
            return (Criteria) this;
        }

        public Criteria andCardidIn(List<Integer> values) {
            addCriterion("cardID in", values, "cardid");
            return (Criteria) this;
        }

        public Criteria andCardidNotIn(List<Integer> values) {
            addCriterion("cardID not in", values, "cardid");
            return (Criteria) this;
        }

        public Criteria andCardidBetween(Integer value1, Integer value2) {
            addCriterion("cardID between", value1, value2, "cardid");
            return (Criteria) this;
        }

        public Criteria andCardidNotBetween(Integer value1, Integer value2) {
            addCriterion("cardID not between", value1, value2, "cardid");
            return (Criteria) this;
        }

        public Criteria andParegisterIsNull() {
            addCriterion("paRegister is null");
            return (Criteria) this;
        }

        public Criteria andParegisterIsNotNull() {
            addCriterion("paRegister is not null");
            return (Criteria) this;
        }

        public Criteria andParegisterEqualTo(String value) {
            addCriterion("paRegister =", value, "paregister");
            return (Criteria) this;
        }

        public Criteria andParegisterNotEqualTo(String value) {
            addCriterion("paRegister <>", value, "paregister");
            return (Criteria) this;
        }

        public Criteria andParegisterGreaterThan(String value) {
            addCriterion("paRegister >", value, "paregister");
            return (Criteria) this;
        }

        public Criteria andParegisterGreaterThanOrEqualTo(String value) {
            addCriterion("paRegister >=", value, "paregister");
            return (Criteria) this;
        }

        public Criteria andParegisterLessThan(String value) {
            addCriterion("paRegister <", value, "paregister");
            return (Criteria) this;
        }

        public Criteria andParegisterLessThanOrEqualTo(String value) {
            addCriterion("paRegister <=", value, "paregister");
            return (Criteria) this;
        }

        public Criteria andParegisterLike(String value) {
            addCriterion("paRegister like", value, "paregister");
            return (Criteria) this;
        }

        public Criteria andParegisterNotLike(String value) {
            addCriterion("paRegister not like", value, "paregister");
            return (Criteria) this;
        }

        public Criteria andParegisterIn(List<String> values) {
            addCriterion("paRegister in", values, "paregister");
            return (Criteria) this;
        }

        public Criteria andParegisterNotIn(List<String> values) {
            addCriterion("paRegister not in", values, "paregister");
            return (Criteria) this;
        }

        public Criteria andParegisterBetween(String value1, String value2) {
            addCriterion("paRegister between", value1, value2, "paregister");
            return (Criteria) this;
        }

        public Criteria andParegisterNotBetween(String value1, String value2) {
            addCriterion("paRegister not between", value1, value2, "paregister");
            return (Criteria) this;
        }

        public Criteria andAddressstandardIsNull() {
            addCriterion("addressStandard is null");
            return (Criteria) this;
        }

        public Criteria andAddressstandardIsNotNull() {
            addCriterion("addressStandard is not null");
            return (Criteria) this;
        }

        public Criteria andAddressstandardEqualTo(Integer value) {
            addCriterion("addressStandard =", value, "addressstandard");
            return (Criteria) this;
        }

        public Criteria andAddressstandardNotEqualTo(Integer value) {
            addCriterion("addressStandard <>", value, "addressstandard");
            return (Criteria) this;
        }

        public Criteria andAddressstandardGreaterThan(Integer value) {
            addCriterion("addressStandard >", value, "addressstandard");
            return (Criteria) this;
        }

        public Criteria andAddressstandardGreaterThanOrEqualTo(Integer value) {
            addCriterion("addressStandard >=", value, "addressstandard");
            return (Criteria) this;
        }

        public Criteria andAddressstandardLessThan(Integer value) {
            addCriterion("addressStandard <", value, "addressstandard");
            return (Criteria) this;
        }

        public Criteria andAddressstandardLessThanOrEqualTo(Integer value) {
            addCriterion("addressStandard <=", value, "addressstandard");
            return (Criteria) this;
        }

        public Criteria andAddressstandardIn(List<Integer> values) {
            addCriterion("addressStandard in", values, "addressstandard");
            return (Criteria) this;
        }

        public Criteria andAddressstandardNotIn(List<Integer> values) {
            addCriterion("addressStandard not in", values, "addressstandard");
            return (Criteria) this;
        }

        public Criteria andAddressstandardBetween(Integer value1, Integer value2) {
            addCriterion("addressStandard between", value1, value2, "addressstandard");
            return (Criteria) this;
        }

        public Criteria andAddressstandardNotBetween(Integer value1, Integer value2) {
            addCriterion("addressStandard not between", value1, value2, "addressstandard");
            return (Criteria) this;
        }

        public Criteria andPaaddressIsNull() {
            addCriterion("paAddress is null");
            return (Criteria) this;
        }

        public Criteria andPaaddressIsNotNull() {
            addCriterion("paAddress is not null");
            return (Criteria) this;
        }

        public Criteria andPaaddressEqualTo(String value) {
            addCriterion("paAddress =", value, "paaddress");
            return (Criteria) this;
        }

        public Criteria andPaaddressNotEqualTo(String value) {
            addCriterion("paAddress <>", value, "paaddress");
            return (Criteria) this;
        }

        public Criteria andPaaddressGreaterThan(String value) {
            addCriterion("paAddress >", value, "paaddress");
            return (Criteria) this;
        }

        public Criteria andPaaddressGreaterThanOrEqualTo(String value) {
            addCriterion("paAddress >=", value, "paaddress");
            return (Criteria) this;
        }

        public Criteria andPaaddressLessThan(String value) {
            addCriterion("paAddress <", value, "paaddress");
            return (Criteria) this;
        }

        public Criteria andPaaddressLessThanOrEqualTo(String value) {
            addCriterion("paAddress <=", value, "paaddress");
            return (Criteria) this;
        }

        public Criteria andPaaddressLike(String value) {
            addCriterion("paAddress like", value, "paaddress");
            return (Criteria) this;
        }

        public Criteria andPaaddressNotLike(String value) {
            addCriterion("paAddress not like", value, "paaddress");
            return (Criteria) this;
        }

        public Criteria andPaaddressIn(List<String> values) {
            addCriterion("paAddress in", values, "paaddress");
            return (Criteria) this;
        }

        public Criteria andPaaddressNotIn(List<String> values) {
            addCriterion("paAddress not in", values, "paaddress");
            return (Criteria) this;
        }

        public Criteria andPaaddressBetween(String value1, String value2) {
            addCriterion("paAddress between", value1, value2, "paaddress");
            return (Criteria) this;
        }

        public Criteria andPaaddressNotBetween(String value1, String value2) {
            addCriterion("paAddress not between", value1, value2, "paaddress");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table patient_address
     *
     * @mbggenerated do_not_delete_during_merge
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table patient_address
     *
     * @mbggenerated
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}