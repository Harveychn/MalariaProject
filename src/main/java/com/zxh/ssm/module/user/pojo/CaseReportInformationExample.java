package com.zxh.ssm.module.user.pojo;

import java.util.ArrayList;
import java.util.List;

public class CaseReportInformationExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table case_report_information
     *
     * @mbggenerated
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table case_report_information
     *
     * @mbggenerated
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table case_report_information
     *
     * @mbggenerated
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table case_report_information
     *
     * @mbggenerated
     */
    public CaseReportInformationExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table case_report_information
     *
     * @mbggenerated
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table case_report_information
     *
     * @mbggenerated
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table case_report_information
     *
     * @mbggenerated
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table case_report_information
     *
     * @mbggenerated
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table case_report_information
     *
     * @mbggenerated
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table case_report_information
     *
     * @mbggenerated
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table case_report_information
     *
     * @mbggenerated
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table case_report_information
     *
     * @mbggenerated
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table case_report_information
     *
     * @mbggenerated
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table case_report_information
     *
     * @mbggenerated
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table case_report_information
     *
     * @mbggenerated
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andYearIsNull() {
            addCriterion("year is null");
            return (Criteria) this;
        }

        public Criteria andYearIsNotNull() {
            addCriterion("year is not null");
            return (Criteria) this;
        }

        public Criteria andYearEqualTo(Integer value) {
            addCriterion("year =", value, "year");
            return (Criteria) this;
        }

        public Criteria andYearNotEqualTo(Integer value) {
            addCriterion("year <>", value, "year");
            return (Criteria) this;
        }

        public Criteria andYearGreaterThan(Integer value) {
            addCriterion("year >", value, "year");
            return (Criteria) this;
        }

        public Criteria andYearGreaterThanOrEqualTo(Integer value) {
            addCriterion("year >=", value, "year");
            return (Criteria) this;
        }

        public Criteria andYearLessThan(Integer value) {
            addCriterion("year <", value, "year");
            return (Criteria) this;
        }

        public Criteria andYearLessThanOrEqualTo(Integer value) {
            addCriterion("year <=", value, "year");
            return (Criteria) this;
        }

        public Criteria andYearIn(List<Integer> values) {
            addCriterion("year in", values, "year");
            return (Criteria) this;
        }

        public Criteria andYearNotIn(List<Integer> values) {
            addCriterion("year not in", values, "year");
            return (Criteria) this;
        }

        public Criteria andYearBetween(Integer value1, Integer value2) {
            addCriterion("year between", value1, value2, "year");
            return (Criteria) this;
        }

        public Criteria andYearNotBetween(Integer value1, Integer value2) {
            addCriterion("year not between", value1, value2, "year");
            return (Criteria) this;
        }

        public Criteria andCardidIsNull() {
            addCriterion("cardID is null");
            return (Criteria) this;
        }

        public Criteria andCardidIsNotNull() {
            addCriterion("cardID is not null");
            return (Criteria) this;
        }

        public Criteria andCardidEqualTo(Integer value) {
            addCriterion("cardID =", value, "cardid");
            return (Criteria) this;
        }

        public Criteria andCardidNotEqualTo(Integer value) {
            addCriterion("cardID <>", value, "cardid");
            return (Criteria) this;
        }

        public Criteria andCardidGreaterThan(Integer value) {
            addCriterion("cardID >", value, "cardid");
            return (Criteria) this;
        }

        public Criteria andCardidGreaterThanOrEqualTo(Integer value) {
            addCriterion("cardID >=", value, "cardid");
            return (Criteria) this;
        }

        public Criteria andCardidLessThan(Integer value) {
            addCriterion("cardID <", value, "cardid");
            return (Criteria) this;
        }

        public Criteria andCardidLessThanOrEqualTo(Integer value) {
            addCriterion("cardID <=", value, "cardid");
            return (Criteria) this;
        }

        public Criteria andCardidIn(List<Integer> values) {
            addCriterion("cardID in", values, "cardid");
            return (Criteria) this;
        }

        public Criteria andCardidNotIn(List<Integer> values) {
            addCriterion("cardID not in", values, "cardid");
            return (Criteria) this;
        }

        public Criteria andCardidBetween(Integer value1, Integer value2) {
            addCriterion("cardID between", value1, value2, "cardid");
            return (Criteria) this;
        }

        public Criteria andCardidNotBetween(Integer value1, Integer value2) {
            addCriterion("cardID not between", value1, value2, "cardid");
            return (Criteria) this;
        }

        public Criteria andReportunitareacodeIsNull() {
            addCriterion("reportUnitAreaCode is null");
            return (Criteria) this;
        }

        public Criteria andReportunitareacodeIsNotNull() {
            addCriterion("reportUnitAreaCode is not null");
            return (Criteria) this;
        }

        public Criteria andReportunitareacodeEqualTo(Integer value) {
            addCriterion("reportUnitAreaCode =", value, "reportunitareacode");
            return (Criteria) this;
        }

        public Criteria andReportunitareacodeNotEqualTo(Integer value) {
            addCriterion("reportUnitAreaCode <>", value, "reportunitareacode");
            return (Criteria) this;
        }

        public Criteria andReportunitareacodeGreaterThan(Integer value) {
            addCriterion("reportUnitAreaCode >", value, "reportunitareacode");
            return (Criteria) this;
        }

        public Criteria andReportunitareacodeGreaterThanOrEqualTo(Integer value) {
            addCriterion("reportUnitAreaCode >=", value, "reportunitareacode");
            return (Criteria) this;
        }

        public Criteria andReportunitareacodeLessThan(Integer value) {
            addCriterion("reportUnitAreaCode <", value, "reportunitareacode");
            return (Criteria) this;
        }

        public Criteria andReportunitareacodeLessThanOrEqualTo(Integer value) {
            addCriterion("reportUnitAreaCode <=", value, "reportunitareacode");
            return (Criteria) this;
        }

        public Criteria andReportunitareacodeIn(List<Integer> values) {
            addCriterion("reportUnitAreaCode in", values, "reportunitareacode");
            return (Criteria) this;
        }

        public Criteria andReportunitareacodeNotIn(List<Integer> values) {
            addCriterion("reportUnitAreaCode not in", values, "reportunitareacode");
            return (Criteria) this;
        }

        public Criteria andReportunitareacodeBetween(Integer value1, Integer value2) {
            addCriterion("reportUnitAreaCode between", value1, value2, "reportunitareacode");
            return (Criteria) this;
        }

        public Criteria andReportunitareacodeNotBetween(Integer value1, Integer value2) {
            addCriterion("reportUnitAreaCode not between", value1, value2, "reportunitareacode");
            return (Criteria) this;
        }

        public Criteria andReportunitIsNull() {
            addCriterion("reportUnit is null");
            return (Criteria) this;
        }

        public Criteria andReportunitIsNotNull() {
            addCriterion("reportUnit is not null");
            return (Criteria) this;
        }

        public Criteria andReportunitEqualTo(String value) {
            addCriterion("reportUnit =", value, "reportunit");
            return (Criteria) this;
        }

        public Criteria andReportunitNotEqualTo(String value) {
            addCriterion("reportUnit <>", value, "reportunit");
            return (Criteria) this;
        }

        public Criteria andReportunitGreaterThan(String value) {
            addCriterion("reportUnit >", value, "reportunit");
            return (Criteria) this;
        }

        public Criteria andReportunitGreaterThanOrEqualTo(String value) {
            addCriterion("reportUnit >=", value, "reportunit");
            return (Criteria) this;
        }

        public Criteria andReportunitLessThan(String value) {
            addCriterion("reportUnit <", value, "reportunit");
            return (Criteria) this;
        }

        public Criteria andReportunitLessThanOrEqualTo(String value) {
            addCriterion("reportUnit <=", value, "reportunit");
            return (Criteria) this;
        }

        public Criteria andReportunitLike(String value) {
            addCriterion("reportUnit like", value, "reportunit");
            return (Criteria) this;
        }

        public Criteria andReportunitNotLike(String value) {
            addCriterion("reportUnit not like", value, "reportunit");
            return (Criteria) this;
        }

        public Criteria andReportunitIn(List<String> values) {
            addCriterion("reportUnit in", values, "reportunit");
            return (Criteria) this;
        }

        public Criteria andReportunitNotIn(List<String> values) {
            addCriterion("reportUnit not in", values, "reportunit");
            return (Criteria) this;
        }

        public Criteria andReportunitBetween(String value1, String value2) {
            addCriterion("reportUnit between", value1, value2, "reportunit");
            return (Criteria) this;
        }

        public Criteria andReportunitNotBetween(String value1, String value2) {
            addCriterion("reportUnit not between", value1, value2, "reportunit");
            return (Criteria) this;
        }

        public Criteria andUnittypeIsNull() {
            addCriterion("unitType is null");
            return (Criteria) this;
        }

        public Criteria andUnittypeIsNotNull() {
            addCriterion("unitType is not null");
            return (Criteria) this;
        }

        public Criteria andUnittypeEqualTo(String value) {
            addCriterion("unitType =", value, "unittype");
            return (Criteria) this;
        }

        public Criteria andUnittypeNotEqualTo(String value) {
            addCriterion("unitType <>", value, "unittype");
            return (Criteria) this;
        }

        public Criteria andUnittypeGreaterThan(String value) {
            addCriterion("unitType >", value, "unittype");
            return (Criteria) this;
        }

        public Criteria andUnittypeGreaterThanOrEqualTo(String value) {
            addCriterion("unitType >=", value, "unittype");
            return (Criteria) this;
        }

        public Criteria andUnittypeLessThan(String value) {
            addCriterion("unitType <", value, "unittype");
            return (Criteria) this;
        }

        public Criteria andUnittypeLessThanOrEqualTo(String value) {
            addCriterion("unitType <=", value, "unittype");
            return (Criteria) this;
        }

        public Criteria andUnittypeLike(String value) {
            addCriterion("unitType like", value, "unittype");
            return (Criteria) this;
        }

        public Criteria andUnittypeNotLike(String value) {
            addCriterion("unitType not like", value, "unittype");
            return (Criteria) this;
        }

        public Criteria andUnittypeIn(List<String> values) {
            addCriterion("unitType in", values, "unittype");
            return (Criteria) this;
        }

        public Criteria andUnittypeNotIn(List<String> values) {
            addCriterion("unitType not in", values, "unittype");
            return (Criteria) this;
        }

        public Criteria andUnittypeBetween(String value1, String value2) {
            addCriterion("unitType between", value1, value2, "unittype");
            return (Criteria) this;
        }

        public Criteria andUnittypeNotBetween(String value1, String value2) {
            addCriterion("unitType not between", value1, value2, "unittype");
            return (Criteria) this;
        }

        public Criteria andReportinputdateIsNull() {
            addCriterion("reportInputDate is null");
            return (Criteria) this;
        }

        public Criteria andReportinputdateIsNotNull() {
            addCriterion("reportInputDate is not null");
            return (Criteria) this;
        }

        public Criteria andReportinputdateEqualTo(String value) {
            addCriterion("reportInputDate =", value, "reportinputdate");
            return (Criteria) this;
        }

        public Criteria andReportinputdateNotEqualTo(String value) {
            addCriterion("reportInputDate <>", value, "reportinputdate");
            return (Criteria) this;
        }

        public Criteria andReportinputdateGreaterThan(String value) {
            addCriterion("reportInputDate >", value, "reportinputdate");
            return (Criteria) this;
        }

        public Criteria andReportinputdateGreaterThanOrEqualTo(String value) {
            addCriterion("reportInputDate >=", value, "reportinputdate");
            return (Criteria) this;
        }

        public Criteria andReportinputdateLessThan(String value) {
            addCriterion("reportInputDate <", value, "reportinputdate");
            return (Criteria) this;
        }

        public Criteria andReportinputdateLessThanOrEqualTo(String value) {
            addCriterion("reportInputDate <=", value, "reportinputdate");
            return (Criteria) this;
        }

        public Criteria andReportinputdateLike(String value) {
            addCriterion("reportInputDate like", value, "reportinputdate");
            return (Criteria) this;
        }

        public Criteria andReportinputdateNotLike(String value) {
            addCriterion("reportInputDate not like", value, "reportinputdate");
            return (Criteria) this;
        }

        public Criteria andReportinputdateIn(List<String> values) {
            addCriterion("reportInputDate in", values, "reportinputdate");
            return (Criteria) this;
        }

        public Criteria andReportinputdateNotIn(List<String> values) {
            addCriterion("reportInputDate not in", values, "reportinputdate");
            return (Criteria) this;
        }

        public Criteria andReportinputdateBetween(String value1, String value2) {
            addCriterion("reportInputDate between", value1, value2, "reportinputdate");
            return (Criteria) this;
        }

        public Criteria andReportinputdateNotBetween(String value1, String value2) {
            addCriterion("reportInputDate not between", value1, value2, "reportinputdate");
            return (Criteria) this;
        }

        public Criteria andInputuserIsNull() {
            addCriterion("inputUser is null");
            return (Criteria) this;
        }

        public Criteria andInputuserIsNotNull() {
            addCriterion("inputUser is not null");
            return (Criteria) this;
        }

        public Criteria andInputuserEqualTo(String value) {
            addCriterion("inputUser =", value, "inputuser");
            return (Criteria) this;
        }

        public Criteria andInputuserNotEqualTo(String value) {
            addCriterion("inputUser <>", value, "inputuser");
            return (Criteria) this;
        }

        public Criteria andInputuserGreaterThan(String value) {
            addCriterion("inputUser >", value, "inputuser");
            return (Criteria) this;
        }

        public Criteria andInputuserGreaterThanOrEqualTo(String value) {
            addCriterion("inputUser >=", value, "inputuser");
            return (Criteria) this;
        }

        public Criteria andInputuserLessThan(String value) {
            addCriterion("inputUser <", value, "inputuser");
            return (Criteria) this;
        }

        public Criteria andInputuserLessThanOrEqualTo(String value) {
            addCriterion("inputUser <=", value, "inputuser");
            return (Criteria) this;
        }

        public Criteria andInputuserLike(String value) {
            addCriterion("inputUser like", value, "inputuser");
            return (Criteria) this;
        }

        public Criteria andInputuserNotLike(String value) {
            addCriterion("inputUser not like", value, "inputuser");
            return (Criteria) this;
        }

        public Criteria andInputuserIn(List<String> values) {
            addCriterion("inputUser in", values, "inputuser");
            return (Criteria) this;
        }

        public Criteria andInputuserNotIn(List<String> values) {
            addCriterion("inputUser not in", values, "inputuser");
            return (Criteria) this;
        }

        public Criteria andInputuserBetween(String value1, String value2) {
            addCriterion("inputUser between", value1, value2, "inputuser");
            return (Criteria) this;
        }

        public Criteria andInputuserNotBetween(String value1, String value2) {
            addCriterion("inputUser not between", value1, value2, "inputuser");
            return (Criteria) this;
        }

        public Criteria andInputuserunitIsNull() {
            addCriterion("inputUserUnit is null");
            return (Criteria) this;
        }

        public Criteria andInputuserunitIsNotNull() {
            addCriterion("inputUserUnit is not null");
            return (Criteria) this;
        }

        public Criteria andInputuserunitEqualTo(String value) {
            addCriterion("inputUserUnit =", value, "inputuserunit");
            return (Criteria) this;
        }

        public Criteria andInputuserunitNotEqualTo(String value) {
            addCriterion("inputUserUnit <>", value, "inputuserunit");
            return (Criteria) this;
        }

        public Criteria andInputuserunitGreaterThan(String value) {
            addCriterion("inputUserUnit >", value, "inputuserunit");
            return (Criteria) this;
        }

        public Criteria andInputuserunitGreaterThanOrEqualTo(String value) {
            addCriterion("inputUserUnit >=", value, "inputuserunit");
            return (Criteria) this;
        }

        public Criteria andInputuserunitLessThan(String value) {
            addCriterion("inputUserUnit <", value, "inputuserunit");
            return (Criteria) this;
        }

        public Criteria andInputuserunitLessThanOrEqualTo(String value) {
            addCriterion("inputUserUnit <=", value, "inputuserunit");
            return (Criteria) this;
        }

        public Criteria andInputuserunitLike(String value) {
            addCriterion("inputUserUnit like", value, "inputuserunit");
            return (Criteria) this;
        }

        public Criteria andInputuserunitNotLike(String value) {
            addCriterion("inputUserUnit not like", value, "inputuserunit");
            return (Criteria) this;
        }

        public Criteria andInputuserunitIn(List<String> values) {
            addCriterion("inputUserUnit in", values, "inputuserunit");
            return (Criteria) this;
        }

        public Criteria andInputuserunitNotIn(List<String> values) {
            addCriterion("inputUserUnit not in", values, "inputuserunit");
            return (Criteria) this;
        }

        public Criteria andInputuserunitBetween(String value1, String value2) {
            addCriterion("inputUserUnit between", value1, value2, "inputuserunit");
            return (Criteria) this;
        }

        public Criteria andInputuserunitNotBetween(String value1, String value2) {
            addCriterion("inputUserUnit not between", value1, value2, "inputuserunit");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table case_report_information
     *
     * @mbggenerated do_not_delete_during_merge
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table case_report_information
     *
     * @mbggenerated
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}