package com.zxh.ssm.module.whole.pojo;

import java.util.ArrayList;
import java.util.List;

public class DiseaseOutbreakExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table disease_outbreak
     *
     * @mbggenerated
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table disease_outbreak
     *
     * @mbggenerated
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table disease_outbreak
     *
     * @mbggenerated
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table disease_outbreak
     *
     * @mbggenerated
     */
    public DiseaseOutbreakExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table disease_outbreak
     *
     * @mbggenerated
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table disease_outbreak
     *
     * @mbggenerated
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table disease_outbreak
     *
     * @mbggenerated
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table disease_outbreak
     *
     * @mbggenerated
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table disease_outbreak
     *
     * @mbggenerated
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table disease_outbreak
     *
     * @mbggenerated
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table disease_outbreak
     *
     * @mbggenerated
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table disease_outbreak
     *
     * @mbggenerated
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table disease_outbreak
     *
     * @mbggenerated
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table disease_outbreak
     *
     * @mbggenerated
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table disease_outbreak
     *
     * @mbggenerated
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andBreakyearIsNull() {
            addCriterion("breakYear is null");
            return (Criteria) this;
        }

        public Criteria andBreakyearIsNotNull() {
            addCriterion("breakYear is not null");
            return (Criteria) this;
        }

        public Criteria andBreakyearEqualTo(Integer value) {
            addCriterion("breakYear =", value, "breakyear");
            return (Criteria) this;
        }

        public Criteria andBreakyearNotEqualTo(Integer value) {
            addCriterion("breakYear <>", value, "breakyear");
            return (Criteria) this;
        }

        public Criteria andBreakyearGreaterThan(Integer value) {
            addCriterion("breakYear >", value, "breakyear");
            return (Criteria) this;
        }

        public Criteria andBreakyearGreaterThanOrEqualTo(Integer value) {
            addCriterion("breakYear >=", value, "breakyear");
            return (Criteria) this;
        }

        public Criteria andBreakyearLessThan(Integer value) {
            addCriterion("breakYear <", value, "breakyear");
            return (Criteria) this;
        }

        public Criteria andBreakyearLessThanOrEqualTo(Integer value) {
            addCriterion("breakYear <=", value, "breakyear");
            return (Criteria) this;
        }

        public Criteria andBreakyearIn(List<Integer> values) {
            addCriterion("breakYear in", values, "breakyear");
            return (Criteria) this;
        }

        public Criteria andBreakyearNotIn(List<Integer> values) {
            addCriterion("breakYear not in", values, "breakyear");
            return (Criteria) this;
        }

        public Criteria andBreakyearBetween(Integer value1, Integer value2) {
            addCriterion("breakYear between", value1, value2, "breakyear");
            return (Criteria) this;
        }

        public Criteria andBreakyearNotBetween(Integer value1, Integer value2) {
            addCriterion("breakYear not between", value1, value2, "breakyear");
            return (Criteria) this;
        }

        public Criteria andBreakmonthIsNull() {
            addCriterion("breakMonth is null");
            return (Criteria) this;
        }

        public Criteria andBreakmonthIsNotNull() {
            addCriterion("breakMonth is not null");
            return (Criteria) this;
        }

        public Criteria andBreakmonthEqualTo(Integer value) {
            addCriterion("breakMonth =", value, "breakmonth");
            return (Criteria) this;
        }

        public Criteria andBreakmonthNotEqualTo(Integer value) {
            addCriterion("breakMonth <>", value, "breakmonth");
            return (Criteria) this;
        }

        public Criteria andBreakmonthGreaterThan(Integer value) {
            addCriterion("breakMonth >", value, "breakmonth");
            return (Criteria) this;
        }

        public Criteria andBreakmonthGreaterThanOrEqualTo(Integer value) {
            addCriterion("breakMonth >=", value, "breakmonth");
            return (Criteria) this;
        }

        public Criteria andBreakmonthLessThan(Integer value) {
            addCriterion("breakMonth <", value, "breakmonth");
            return (Criteria) this;
        }

        public Criteria andBreakmonthLessThanOrEqualTo(Integer value) {
            addCriterion("breakMonth <=", value, "breakmonth");
            return (Criteria) this;
        }

        public Criteria andBreakmonthIn(List<Integer> values) {
            addCriterion("breakMonth in", values, "breakmonth");
            return (Criteria) this;
        }

        public Criteria andBreakmonthNotIn(List<Integer> values) {
            addCriterion("breakMonth not in", values, "breakmonth");
            return (Criteria) this;
        }

        public Criteria andBreakmonthBetween(Integer value1, Integer value2) {
            addCriterion("breakMonth between", value1, value2, "breakmonth");
            return (Criteria) this;
        }

        public Criteria andBreakmonthNotBetween(Integer value1, Integer value2) {
            addCriterion("breakMonth not between", value1, value2, "breakmonth");
            return (Criteria) this;
        }

        public Criteria andProvinceIsNull() {
            addCriterion("province is null");
            return (Criteria) this;
        }

        public Criteria andProvinceIsNotNull() {
            addCriterion("province is not null");
            return (Criteria) this;
        }

        public Criteria andProvinceEqualTo(String value) {
            addCriterion("province =", value, "province");
            return (Criteria) this;
        }

        public Criteria andProvinceNotEqualTo(String value) {
            addCriterion("province <>", value, "province");
            return (Criteria) this;
        }

        public Criteria andProvinceGreaterThan(String value) {
            addCriterion("province >", value, "province");
            return (Criteria) this;
        }

        public Criteria andProvinceGreaterThanOrEqualTo(String value) {
            addCriterion("province >=", value, "province");
            return (Criteria) this;
        }

        public Criteria andProvinceLessThan(String value) {
            addCriterion("province <", value, "province");
            return (Criteria) this;
        }

        public Criteria andProvinceLessThanOrEqualTo(String value) {
            addCriterion("province <=", value, "province");
            return (Criteria) this;
        }

        public Criteria andProvinceLike(String value) {
            addCriterion("province like", value, "province");
            return (Criteria) this;
        }

        public Criteria andProvinceNotLike(String value) {
            addCriterion("province not like", value, "province");
            return (Criteria) this;
        }

        public Criteria andProvinceIn(List<String> values) {
            addCriterion("province in", values, "province");
            return (Criteria) this;
        }

        public Criteria andProvinceNotIn(List<String> values) {
            addCriterion("province not in", values, "province");
            return (Criteria) this;
        }

        public Criteria andProvinceBetween(String value1, String value2) {
            addCriterion("province between", value1, value2, "province");
            return (Criteria) this;
        }

        public Criteria andProvinceNotBetween(String value1, String value2) {
            addCriterion("province not between", value1, value2, "province");
            return (Criteria) this;
        }

        public Criteria andCityIsNull() {
            addCriterion("city is null");
            return (Criteria) this;
        }

        public Criteria andCityIsNotNull() {
            addCriterion("city is not null");
            return (Criteria) this;
        }

        public Criteria andCityEqualTo(String value) {
            addCriterion("city =", value, "city");
            return (Criteria) this;
        }

        public Criteria andCityNotEqualTo(String value) {
            addCriterion("city <>", value, "city");
            return (Criteria) this;
        }

        public Criteria andCityGreaterThan(String value) {
            addCriterion("city >", value, "city");
            return (Criteria) this;
        }

        public Criteria andCityGreaterThanOrEqualTo(String value) {
            addCriterion("city >=", value, "city");
            return (Criteria) this;
        }

        public Criteria andCityLessThan(String value) {
            addCriterion("city <", value, "city");
            return (Criteria) this;
        }

        public Criteria andCityLessThanOrEqualTo(String value) {
            addCriterion("city <=", value, "city");
            return (Criteria) this;
        }

        public Criteria andCityLike(String value) {
            addCriterion("city like", value, "city");
            return (Criteria) this;
        }

        public Criteria andCityNotLike(String value) {
            addCriterion("city not like", value, "city");
            return (Criteria) this;
        }

        public Criteria andCityIn(List<String> values) {
            addCriterion("city in", values, "city");
            return (Criteria) this;
        }

        public Criteria andCityNotIn(List<String> values) {
            addCriterion("city not in", values, "city");
            return (Criteria) this;
        }

        public Criteria andCityBetween(String value1, String value2) {
            addCriterion("city between", value1, value2, "city");
            return (Criteria) this;
        }

        public Criteria andCityNotBetween(String value1, String value2) {
            addCriterion("city not between", value1, value2, "city");
            return (Criteria) this;
        }

        public Criteria andCountyIsNull() {
            addCriterion("county is null");
            return (Criteria) this;
        }

        public Criteria andCountyIsNotNull() {
            addCriterion("county is not null");
            return (Criteria) this;
        }

        public Criteria andCountyEqualTo(String value) {
            addCriterion("county =", value, "county");
            return (Criteria) this;
        }

        public Criteria andCountyNotEqualTo(String value) {
            addCriterion("county <>", value, "county");
            return (Criteria) this;
        }

        public Criteria andCountyGreaterThan(String value) {
            addCriterion("county >", value, "county");
            return (Criteria) this;
        }

        public Criteria andCountyGreaterThanOrEqualTo(String value) {
            addCriterion("county >=", value, "county");
            return (Criteria) this;
        }

        public Criteria andCountyLessThan(String value) {
            addCriterion("county <", value, "county");
            return (Criteria) this;
        }

        public Criteria andCountyLessThanOrEqualTo(String value) {
            addCriterion("county <=", value, "county");
            return (Criteria) this;
        }

        public Criteria andCountyLike(String value) {
            addCriterion("county like", value, "county");
            return (Criteria) this;
        }

        public Criteria andCountyNotLike(String value) {
            addCriterion("county not like", value, "county");
            return (Criteria) this;
        }

        public Criteria andCountyIn(List<String> values) {
            addCriterion("county in", values, "county");
            return (Criteria) this;
        }

        public Criteria andCountyNotIn(List<String> values) {
            addCriterion("county not in", values, "county");
            return (Criteria) this;
        }

        public Criteria andCountyBetween(String value1, String value2) {
            addCriterion("county between", value1, value2, "county");
            return (Criteria) this;
        }

        public Criteria andCountyNotBetween(String value1, String value2) {
            addCriterion("county not between", value1, value2, "county");
            return (Criteria) this;
        }

        public Criteria andTownIsNull() {
            addCriterion("town is null");
            return (Criteria) this;
        }

        public Criteria andTownIsNotNull() {
            addCriterion("town is not null");
            return (Criteria) this;
        }

        public Criteria andTownEqualTo(String value) {
            addCriterion("town =", value, "town");
            return (Criteria) this;
        }

        public Criteria andTownNotEqualTo(String value) {
            addCriterion("town <>", value, "town");
            return (Criteria) this;
        }

        public Criteria andTownGreaterThan(String value) {
            addCriterion("town >", value, "town");
            return (Criteria) this;
        }

        public Criteria andTownGreaterThanOrEqualTo(String value) {
            addCriterion("town >=", value, "town");
            return (Criteria) this;
        }

        public Criteria andTownLessThan(String value) {
            addCriterion("town <", value, "town");
            return (Criteria) this;
        }

        public Criteria andTownLessThanOrEqualTo(String value) {
            addCriterion("town <=", value, "town");
            return (Criteria) this;
        }

        public Criteria andTownLike(String value) {
            addCriterion("town like", value, "town");
            return (Criteria) this;
        }

        public Criteria andTownNotLike(String value) {
            addCriterion("town not like", value, "town");
            return (Criteria) this;
        }

        public Criteria andTownIn(List<String> values) {
            addCriterion("town in", values, "town");
            return (Criteria) this;
        }

        public Criteria andTownNotIn(List<String> values) {
            addCriterion("town not in", values, "town");
            return (Criteria) this;
        }

        public Criteria andTownBetween(String value1, String value2) {
            addCriterion("town between", value1, value2, "town");
            return (Criteria) this;
        }

        public Criteria andTownNotBetween(String value1, String value2) {
            addCriterion("town not between", value1, value2, "town");
            return (Criteria) this;
        }

        public Criteria andCasenumIsNull() {
            addCriterion("caseNum is null");
            return (Criteria) this;
        }

        public Criteria andCasenumIsNotNull() {
            addCriterion("caseNum is not null");
            return (Criteria) this;
        }

        public Criteria andCasenumEqualTo(Integer value) {
            addCriterion("caseNum =", value, "casenum");
            return (Criteria) this;
        }

        public Criteria andCasenumNotEqualTo(Integer value) {
            addCriterion("caseNum <>", value, "casenum");
            return (Criteria) this;
        }

        public Criteria andCasenumGreaterThan(Integer value) {
            addCriterion("caseNum >", value, "casenum");
            return (Criteria) this;
        }

        public Criteria andCasenumGreaterThanOrEqualTo(Integer value) {
            addCriterion("caseNum >=", value, "casenum");
            return (Criteria) this;
        }

        public Criteria andCasenumLessThan(Integer value) {
            addCriterion("caseNum <", value, "casenum");
            return (Criteria) this;
        }

        public Criteria andCasenumLessThanOrEqualTo(Integer value) {
            addCriterion("caseNum <=", value, "casenum");
            return (Criteria) this;
        }

        public Criteria andCasenumIn(List<Integer> values) {
            addCriterion("caseNum in", values, "casenum");
            return (Criteria) this;
        }

        public Criteria andCasenumNotIn(List<Integer> values) {
            addCriterion("caseNum not in", values, "casenum");
            return (Criteria) this;
        }

        public Criteria andCasenumBetween(Integer value1, Integer value2) {
            addCriterion("caseNum between", value1, value2, "casenum");
            return (Criteria) this;
        }

        public Criteria andCasenumNotBetween(Integer value1, Integer value2) {
            addCriterion("caseNum not between", value1, value2, "casenum");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table disease_outbreak
     *
     * @mbggenerated do_not_delete_during_merge
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table disease_outbreak
     *
     * @mbggenerated
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}