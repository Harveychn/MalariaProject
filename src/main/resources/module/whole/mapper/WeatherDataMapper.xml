<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.zxh.ssm.module.whole.mapper.WeatherDataMapper">
  <resultMap id="BaseResultMap" type="com.zxh.ssm.module.whole.pojo.WeatherData">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <id column="districtStationNum" jdbcType="INTEGER" property="districtstationnum" />
    <id column="weatherYear" jdbcType="INTEGER" property="weatheryear" />
    <id column="weatherMonth" jdbcType="INTEGER" property="weathermonth" />
    <id column="weatherDay" jdbcType="INTEGER" property="weatherday" />
    <result column="precipitation2020" jdbcType="CHAR" property="precipitation2020" />
    <result column="maximumWindSpeed" jdbcType="INTEGER" property="maximumwindspeed" />
    <result column="directionMaximumWindSpeed" jdbcType="CHAR" property="directionmaximumwindspeed" />
    <result column="avePressure" jdbcType="INTEGER" property="avepressure" />
    <result column="aveWindSpeed" jdbcType="INTEGER" property="avewindspeed" />
    <result column="aveTemperature" jdbcType="INTEGER" property="avetemperature" />
    <result column="aveVaporPressure" jdbcType="INTEGER" property="avevaporpressure" />
    <result column="aveRelativeHumidity" jdbcType="INTEGER" property="averelativehumidity" />
    <result column="sunshineTime" jdbcType="INTEGER" property="sunshinetime" />
    <result column="dailyMinPressure" jdbcType="INTEGER" property="dailyminpressure" />
    <result column="dailyMinTemperature" jdbcType="INTEGER" property="dailymintemperature" />
    <result column="dailyMaxPressure" jdbcType="INTEGER" property="dailymaxpressure" />
    <result column="dailyMaxTemperature" jdbcType="INTEGER" property="dailymaxtemperature" />
    <result column="maxWindSpeed" jdbcType="INTEGER" property="maxwindspeed" />
    <result column="directionMaxWindSpeed" jdbcType="CHAR" property="directionmaxwindspeed" />
    <result column="minRelativeHumidity" jdbcType="INTEGER" property="minrelativehumidity" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    districtStationNum, weatherYear, weatherMonth, weatherDay, precipitation2020, maximumWindSpeed, 
    directionMaximumWindSpeed, avePressure, aveWindSpeed, aveTemperature, aveVaporPressure, 
    aveRelativeHumidity, sunshineTime, dailyMinPressure, dailyMinTemperature, dailyMaxPressure, 
    dailyMaxTemperature, maxWindSpeed, directionMaxWindSpeed, minRelativeHumidity
  </sql>
  <select id="selectByExample" parameterType="com.zxh.ssm.module.whole.pojo.WeatherDataExample" resultMap="BaseResultMap">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from weather_data
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="com.zxh.ssm.module.whole.pojo.WeatherDataKey" resultMap="BaseResultMap">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select 
    <include refid="Base_Column_List" />
    from weather_data
    where districtStationNum = #{districtstationnum,jdbcType=INTEGER}
      and weatherYear = #{weatheryear,jdbcType=INTEGER}
      and weatherMonth = #{weathermonth,jdbcType=INTEGER}
      and weatherDay = #{weatherday,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="com.zxh.ssm.module.whole.pojo.WeatherDataKey">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from weather_data
    where districtStationNum = #{districtstationnum,jdbcType=INTEGER}
      and weatherYear = #{weatheryear,jdbcType=INTEGER}
      and weatherMonth = #{weathermonth,jdbcType=INTEGER}
      and weatherDay = #{weatherday,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.zxh.ssm.module.whole.pojo.WeatherDataExample">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from weather_data
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.zxh.ssm.module.whole.pojo.WeatherData">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into weather_data (districtStationNum, weatherYear, 
      weatherMonth, weatherDay, precipitation2020, 
      maximumWindSpeed, directionMaximumWindSpeed, 
      avePressure, aveWindSpeed, aveTemperature, 
      aveVaporPressure, aveRelativeHumidity, 
      sunshineTime, dailyMinPressure, dailyMinTemperature, 
      dailyMaxPressure, dailyMaxTemperature, 
      maxWindSpeed, directionMaxWindSpeed, minRelativeHumidity
      )
    values (#{districtstationnum,jdbcType=INTEGER}, #{weatheryear,jdbcType=INTEGER}, 
      #{weathermonth,jdbcType=INTEGER}, #{weatherday,jdbcType=INTEGER}, #{precipitation2020,jdbcType=CHAR}, 
      #{maximumwindspeed,jdbcType=INTEGER}, #{directionmaximumwindspeed,jdbcType=CHAR}, 
      #{avepressure,jdbcType=INTEGER}, #{avewindspeed,jdbcType=INTEGER}, #{avetemperature,jdbcType=INTEGER}, 
      #{avevaporpressure,jdbcType=INTEGER}, #{averelativehumidity,jdbcType=INTEGER}, 
      #{sunshinetime,jdbcType=INTEGER}, #{dailyminpressure,jdbcType=INTEGER}, #{dailymintemperature,jdbcType=INTEGER}, 
      #{dailymaxpressure,jdbcType=INTEGER}, #{dailymaxtemperature,jdbcType=INTEGER}, 
      #{maxwindspeed,jdbcType=INTEGER}, #{directionmaxwindspeed,jdbcType=CHAR}, #{minrelativehumidity,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.zxh.ssm.module.whole.pojo.WeatherData">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into weather_data
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="districtstationnum != null">
        districtStationNum,
      </if>
      <if test="weatheryear != null">
        weatherYear,
      </if>
      <if test="weathermonth != null">
        weatherMonth,
      </if>
      <if test="weatherday != null">
        weatherDay,
      </if>
      <if test="precipitation2020 != null">
        precipitation2020,
      </if>
      <if test="maximumwindspeed != null">
        maximumWindSpeed,
      </if>
      <if test="directionmaximumwindspeed != null">
        directionMaximumWindSpeed,
      </if>
      <if test="avepressure != null">
        avePressure,
      </if>
      <if test="avewindspeed != null">
        aveWindSpeed,
      </if>
      <if test="avetemperature != null">
        aveTemperature,
      </if>
      <if test="avevaporpressure != null">
        aveVaporPressure,
      </if>
      <if test="averelativehumidity != null">
        aveRelativeHumidity,
      </if>
      <if test="sunshinetime != null">
        sunshineTime,
      </if>
      <if test="dailyminpressure != null">
        dailyMinPressure,
      </if>
      <if test="dailymintemperature != null">
        dailyMinTemperature,
      </if>
      <if test="dailymaxpressure != null">
        dailyMaxPressure,
      </if>
      <if test="dailymaxtemperature != null">
        dailyMaxTemperature,
      </if>
      <if test="maxwindspeed != null">
        maxWindSpeed,
      </if>
      <if test="directionmaxwindspeed != null">
        directionMaxWindSpeed,
      </if>
      <if test="minrelativehumidity != null">
        minRelativeHumidity,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="districtstationnum != null">
        #{districtstationnum,jdbcType=INTEGER},
      </if>
      <if test="weatheryear != null">
        #{weatheryear,jdbcType=INTEGER},
      </if>
      <if test="weathermonth != null">
        #{weathermonth,jdbcType=INTEGER},
      </if>
      <if test="weatherday != null">
        #{weatherday,jdbcType=INTEGER},
      </if>
      <if test="precipitation2020 != null">
        #{precipitation2020,jdbcType=CHAR},
      </if>
      <if test="maximumwindspeed != null">
        #{maximumwindspeed,jdbcType=INTEGER},
      </if>
      <if test="directionmaximumwindspeed != null">
        #{directionmaximumwindspeed,jdbcType=CHAR},
      </if>
      <if test="avepressure != null">
        #{avepressure,jdbcType=INTEGER},
      </if>
      <if test="avewindspeed != null">
        #{avewindspeed,jdbcType=INTEGER},
      </if>
      <if test="avetemperature != null">
        #{avetemperature,jdbcType=INTEGER},
      </if>
      <if test="avevaporpressure != null">
        #{avevaporpressure,jdbcType=INTEGER},
      </if>
      <if test="averelativehumidity != null">
        #{averelativehumidity,jdbcType=INTEGER},
      </if>
      <if test="sunshinetime != null">
        #{sunshinetime,jdbcType=INTEGER},
      </if>
      <if test="dailyminpressure != null">
        #{dailyminpressure,jdbcType=INTEGER},
      </if>
      <if test="dailymintemperature != null">
        #{dailymintemperature,jdbcType=INTEGER},
      </if>
      <if test="dailymaxpressure != null">
        #{dailymaxpressure,jdbcType=INTEGER},
      </if>
      <if test="dailymaxtemperature != null">
        #{dailymaxtemperature,jdbcType=INTEGER},
      </if>
      <if test="maxwindspeed != null">
        #{maxwindspeed,jdbcType=INTEGER},
      </if>
      <if test="directionmaxwindspeed != null">
        #{directionmaxwindspeed,jdbcType=CHAR},
      </if>
      <if test="minrelativehumidity != null">
        #{minrelativehumidity,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.zxh.ssm.module.whole.pojo.WeatherDataExample" resultType="java.lang.Integer">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select count(*) from weather_data
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update weather_data
    <set>
      <if test="record.districtstationnum != null">
        districtStationNum = #{record.districtstationnum,jdbcType=INTEGER},
      </if>
      <if test="record.weatheryear != null">
        weatherYear = #{record.weatheryear,jdbcType=INTEGER},
      </if>
      <if test="record.weathermonth != null">
        weatherMonth = #{record.weathermonth,jdbcType=INTEGER},
      </if>
      <if test="record.weatherday != null">
        weatherDay = #{record.weatherday,jdbcType=INTEGER},
      </if>
      <if test="record.precipitation2020 != null">
        precipitation2020 = #{record.precipitation2020,jdbcType=CHAR},
      </if>
      <if test="record.maximumwindspeed != null">
        maximumWindSpeed = #{record.maximumwindspeed,jdbcType=INTEGER},
      </if>
      <if test="record.directionmaximumwindspeed != null">
        directionMaximumWindSpeed = #{record.directionmaximumwindspeed,jdbcType=CHAR},
      </if>
      <if test="record.avepressure != null">
        avePressure = #{record.avepressure,jdbcType=INTEGER},
      </if>
      <if test="record.avewindspeed != null">
        aveWindSpeed = #{record.avewindspeed,jdbcType=INTEGER},
      </if>
      <if test="record.avetemperature != null">
        aveTemperature = #{record.avetemperature,jdbcType=INTEGER},
      </if>
      <if test="record.avevaporpressure != null">
        aveVaporPressure = #{record.avevaporpressure,jdbcType=INTEGER},
      </if>
      <if test="record.averelativehumidity != null">
        aveRelativeHumidity = #{record.averelativehumidity,jdbcType=INTEGER},
      </if>
      <if test="record.sunshinetime != null">
        sunshineTime = #{record.sunshinetime,jdbcType=INTEGER},
      </if>
      <if test="record.dailyminpressure != null">
        dailyMinPressure = #{record.dailyminpressure,jdbcType=INTEGER},
      </if>
      <if test="record.dailymintemperature != null">
        dailyMinTemperature = #{record.dailymintemperature,jdbcType=INTEGER},
      </if>
      <if test="record.dailymaxpressure != null">
        dailyMaxPressure = #{record.dailymaxpressure,jdbcType=INTEGER},
      </if>
      <if test="record.dailymaxtemperature != null">
        dailyMaxTemperature = #{record.dailymaxtemperature,jdbcType=INTEGER},
      </if>
      <if test="record.maxwindspeed != null">
        maxWindSpeed = #{record.maxwindspeed,jdbcType=INTEGER},
      </if>
      <if test="record.directionmaxwindspeed != null">
        directionMaxWindSpeed = #{record.directionmaxwindspeed,jdbcType=CHAR},
      </if>
      <if test="record.minrelativehumidity != null">
        minRelativeHumidity = #{record.minrelativehumidity,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update weather_data
    set districtStationNum = #{record.districtstationnum,jdbcType=INTEGER},
      weatherYear = #{record.weatheryear,jdbcType=INTEGER},
      weatherMonth = #{record.weathermonth,jdbcType=INTEGER},
      weatherDay = #{record.weatherday,jdbcType=INTEGER},
      precipitation2020 = #{record.precipitation2020,jdbcType=CHAR},
      maximumWindSpeed = #{record.maximumwindspeed,jdbcType=INTEGER},
      directionMaximumWindSpeed = #{record.directionmaximumwindspeed,jdbcType=CHAR},
      avePressure = #{record.avepressure,jdbcType=INTEGER},
      aveWindSpeed = #{record.avewindspeed,jdbcType=INTEGER},
      aveTemperature = #{record.avetemperature,jdbcType=INTEGER},
      aveVaporPressure = #{record.avevaporpressure,jdbcType=INTEGER},
      aveRelativeHumidity = #{record.averelativehumidity,jdbcType=INTEGER},
      sunshineTime = #{record.sunshinetime,jdbcType=INTEGER},
      dailyMinPressure = #{record.dailyminpressure,jdbcType=INTEGER},
      dailyMinTemperature = #{record.dailymintemperature,jdbcType=INTEGER},
      dailyMaxPressure = #{record.dailymaxpressure,jdbcType=INTEGER},
      dailyMaxTemperature = #{record.dailymaxtemperature,jdbcType=INTEGER},
      maxWindSpeed = #{record.maxwindspeed,jdbcType=INTEGER},
      directionMaxWindSpeed = #{record.directionmaxwindspeed,jdbcType=CHAR},
      minRelativeHumidity = #{record.minrelativehumidity,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.zxh.ssm.module.whole.pojo.WeatherData">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update weather_data
    <set>
      <if test="precipitation2020 != null">
        precipitation2020 = #{precipitation2020,jdbcType=CHAR},
      </if>
      <if test="maximumwindspeed != null">
        maximumWindSpeed = #{maximumwindspeed,jdbcType=INTEGER},
      </if>
      <if test="directionmaximumwindspeed != null">
        directionMaximumWindSpeed = #{directionmaximumwindspeed,jdbcType=CHAR},
      </if>
      <if test="avepressure != null">
        avePressure = #{avepressure,jdbcType=INTEGER},
      </if>
      <if test="avewindspeed != null">
        aveWindSpeed = #{avewindspeed,jdbcType=INTEGER},
      </if>
      <if test="avetemperature != null">
        aveTemperature = #{avetemperature,jdbcType=INTEGER},
      </if>
      <if test="avevaporpressure != null">
        aveVaporPressure = #{avevaporpressure,jdbcType=INTEGER},
      </if>
      <if test="averelativehumidity != null">
        aveRelativeHumidity = #{averelativehumidity,jdbcType=INTEGER},
      </if>
      <if test="sunshinetime != null">
        sunshineTime = #{sunshinetime,jdbcType=INTEGER},
      </if>
      <if test="dailyminpressure != null">
        dailyMinPressure = #{dailyminpressure,jdbcType=INTEGER},
      </if>
      <if test="dailymintemperature != null">
        dailyMinTemperature = #{dailymintemperature,jdbcType=INTEGER},
      </if>
      <if test="dailymaxpressure != null">
        dailyMaxPressure = #{dailymaxpressure,jdbcType=INTEGER},
      </if>
      <if test="dailymaxtemperature != null">
        dailyMaxTemperature = #{dailymaxtemperature,jdbcType=INTEGER},
      </if>
      <if test="maxwindspeed != null">
        maxWindSpeed = #{maxwindspeed,jdbcType=INTEGER},
      </if>
      <if test="directionmaxwindspeed != null">
        directionMaxWindSpeed = #{directionmaxwindspeed,jdbcType=CHAR},
      </if>
      <if test="minrelativehumidity != null">
        minRelativeHumidity = #{minrelativehumidity,jdbcType=INTEGER},
      </if>
    </set>
    where districtStationNum = #{districtstationnum,jdbcType=INTEGER}
      and weatherYear = #{weatheryear,jdbcType=INTEGER}
      and weatherMonth = #{weathermonth,jdbcType=INTEGER}
      and weatherDay = #{weatherday,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.zxh.ssm.module.whole.pojo.WeatherData">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update weather_data
    set precipitation2020 = #{precipitation2020,jdbcType=CHAR},
      maximumWindSpeed = #{maximumwindspeed,jdbcType=INTEGER},
      directionMaximumWindSpeed = #{directionmaximumwindspeed,jdbcType=CHAR},
      avePressure = #{avepressure,jdbcType=INTEGER},
      aveWindSpeed = #{avewindspeed,jdbcType=INTEGER},
      aveTemperature = #{avetemperature,jdbcType=INTEGER},
      aveVaporPressure = #{avevaporpressure,jdbcType=INTEGER},
      aveRelativeHumidity = #{averelativehumidity,jdbcType=INTEGER},
      sunshineTime = #{sunshinetime,jdbcType=INTEGER},
      dailyMinPressure = #{dailyminpressure,jdbcType=INTEGER},
      dailyMinTemperature = #{dailymintemperature,jdbcType=INTEGER},
      dailyMaxPressure = #{dailymaxpressure,jdbcType=INTEGER},
      dailyMaxTemperature = #{dailymaxtemperature,jdbcType=INTEGER},
      maxWindSpeed = #{maxwindspeed,jdbcType=INTEGER},
      directionMaxWindSpeed = #{directionmaxwindspeed,jdbcType=CHAR},
      minRelativeHumidity = #{minrelativehumidity,jdbcType=INTEGER}
    where districtStationNum = #{districtstationnum,jdbcType=INTEGER}
      and weatherYear = #{weatheryear,jdbcType=INTEGER}
      and weatherMonth = #{weathermonth,jdbcType=INTEGER}
      and weatherDay = #{weatherday,jdbcType=INTEGER}
  </update>
</mapper>